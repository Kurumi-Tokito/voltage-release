#!/bin/bash

# ENV
keys_path="$(pwd)/keys"
apex_path="$(pwd)/apex"
hash="-sha256"

# Setup
mkdir -p ${keys_path}
mkdir -p ${apex_path}

# Fetch Latest Make_key Scripts From AOSP Source
curl "https://android.googlesource.com/platform/development/+/refs/heads/main/tools/make_key?format=text" | base64 -d > make_key
sed -i 's|2048|4096|g' make_key
chmod +x make_key

# Functions
function generate_overrides_mk() {
    echo "" >> keys.mk
    echo "PRODUCT_CERTIFICATE_OVERRIDES := \\" >> keys.mk
    for key in $(cat ${1}); do
        echo "    ${key}:${key}.apexkey \\" >> keys.mk
    done
    # Remove trailing `/`
    sed -i '$ s/ \\$//' keys.mk
}

# Platform keys
subject="/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com"

for x in releasekey platform shared media networkstack testkey verity sdk_sandbox bluetooth nfc; do
    ./make_key ./keys/$x "$subject";
done
unset subject

# APEX keys
for apex in $(cat apex/apex.list); do
    subject="/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=${apex}/emailAddress=android@android.com"

    ./make_key ./apex/$apex "$subject";
done

# Generate Makefiles
## Android.bp
echo "// DO NOT EDIT THIS FILE MANUALLY" > Android.bp

for apex in $(cat apex/apex.list); do
    echo "" >> Android.bp
    echo "android_app_certificate {" >> Android.bp
    echo "    name: \"${apex}.apexkey\"," >> Android.bp
    echo "    certificate: \"apex/${apex}\"," >> Android.bp
    echo "}" >> Android.bp
done

## keys.mk
echo "# DO NOT EDIT THIS FILE MANUALLY" > keys.mk
# APEX keys overrides
generate_overrides_mk apex/apex.list

# Platform keys
echo "" >> keys.mk
echo "PRODUCT_DEFAULT_DEV_CERTIFICATE := private-keys/keys/releasekey" >> keys.mk
echo "PRODUCT_EXTRA_RECOVERY_KEYS += private-keys/keys/signed" >> keys.mk
